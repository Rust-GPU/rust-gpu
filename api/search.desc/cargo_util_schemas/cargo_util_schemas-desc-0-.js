searchState.loadedDescShard("cargo_util_schemas", 0, "Low-level Cargo format schemas\n<code>Cargo.toml</code> / Manifest schema definition\nSchemas for JSON messages emitted by Cargo.\nFrom a branch.\nThe default branch of the repository, the reference named …\nA directory-based registry.\nA git repository.\nInformation to find a specific commit in a Git repository.\nA local filesystem-based registry.\nSome or all of the data required to identify a package:\nError parsing a <code>PackageIdSpec</code>.\nError parsing a <code>PartialVersion</code>.\nA local path.\nA remote registry.\nFrom a specific revision. Can be a commit hash (either …\nThe possible kinds of code source.\nA sparse registry.\nFrom a tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if this matches a version, including build metadata\nParses a spec string and returns a <code>PackageIdSpec</code> if the …\nReturns a <code>Display</code>able view of this git reference, or None …\nFull <code>semver::Version</code>, if present\nThe simple format is equivalent to a detailed dependency …\nVerified string newtype\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nThe type when inheriting from a workspace.\nAn enum that allows for inheriting keys from a workspace …\nA group of fields that are inheritable by members of the …\nError validating names in Cargo.\nVerified string newtype\nVerified string newtype\nVerified string newtype\nVerified string newtype\nError parsing a <code>RustVersion</code>.\nIn the simple format, only a version is specified, eg. …\nThis can be parsed from either a TOML string or array, but …\nThis type is used to deserialize <code>Cargo.toml</code> files.\nRepresents the <code>package</code>/<code>project</code> sections of a <code>Cargo.toml</code>.\nCorresponds to a <code>target</code> entry, but <code>TomlTarget</code> is already …\nError validating names in Cargo.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nThe type that is used when not inheriting from a workspace.\nProvide a helpful error message for a common user error.\nReport unused keys (see also nested <code>_unused_keys</code>) Note: …\nThis is here to provide a way to see the “unused …\nThis is here to provide a way to see the “unused …\nOne or more of <code>bin</code>, <code>cdylib</code>, <code>staticlib</code>, <code>bin:&lt;name&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf set, the artifact should also be a dependency\nOverwrite self’s values with the given profile.\nValidated package name\nValidated registry name\nValidated profile name\nValidated feature name\nValidated path base name\nThe URL of the <code>registry</code> field. This is an internal …\nCoerce a value to be a validate package name\nA platform name, like <code>x86_64-apple-darwin</code>\nUnstable feature <code>-Ztrim-paths</code>.\nFile being copied from another location.\nFile being generated during packaging\nWhere the file is from.\nFile information of a package archive generated by …\nA map of relative paths in the archive to their detailed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe Package ID Spec of the package.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn absolute path to the actual file content\nAn absolute path to the original file the generated one is …")