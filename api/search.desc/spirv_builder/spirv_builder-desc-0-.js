searchState.loadedDescShard("spirv_builder", 0, "<code>spirv-builder</code>\nSPIR-V operand kind: Capability\nLike <code>SilentExit</code>, but also using <code>debugPrintf</code> to report the …\nPrint only dependency information (eg for multiple …\nPrint all cargo metadata.\nInclude all <code>OpName</code>s for everything, and <code>OpLine</code>s. …\nOnly include <code>OpName</code>s for public interface variables …\nPrint no cargo metadata.\nStrip all names and other debug information from SPIR-V …\nStrategy used to handle Rust <code>panic!</code>s in shaders compiled …\nReturn from shader entry-point with no side-effects …\n<strong>Warning</strong>: this is <em><strong>unsound</strong></em> (i.e. adds Undefined Behavior to …\nBuilds the module. If <code>print_metadata</code> is …\nAdds a capability to the SPIR-V module. Checking if a …\nAdds an extension to the SPIR-V module. Checking if an …\nSet additional “codegen arg”. Note: the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplits the resulting SPIR-V file into one module per entry …\nPreserve unused descriptor bindings. Useful for reflection.\nWhether to print build.rs cargo metadata (e.g. …\nEnable <code>VK_KHR_relaxed_block_layout</code> when checking standard …\nAllow allocating an object of a pointer type and returning …\nAllow store from one struct type to a different type with …\nBuild in release. Defaults to true.\nEnable <code>VK_EXT_scalar_block_layout</code> when checking standard …\nSet –default-features for the target shader crate.\nSet –features for the target shader crate.\nChange the shader <code>panic!</code> handling strategy (see …\nSkip checking standard uniform/storage buffer layout. …\nSets the level of metadata (primarily <code>OpName</code> and <code>OpLine</code>) …\nSets the path of the “target specification” file.\nEnable <code>VK_KHR_uniform_buffer_standard_layout</code> when checking …\nWhether to also print a “backtrace” (i.e. the chain of …\nWhether to also print the entry-point inputs (excluding …")