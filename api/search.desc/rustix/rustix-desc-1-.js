searchState.loadedDescShard("rustix", 1, "The bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nLow-level configuration flags.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nHow is input interpreted?\nReturn the input communication speed.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ioctl(fd, TIOCEXCL)</code>—Enables exclusive mode on a terminal.\n<code>ioctl(fd, TIOCNXCL)</code>—Disables exclusive mode on a …\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\n<code>isatty(fd)</code>—Tests whether a file descriptor refers to a …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nHigh-level configuration flags.\n<code>cfmakeraw(self)</code>—Set a <code>Termios</code> value to the settings for …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nHow is output translated?\nReturn the output communication speed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the input communication speed.\nSet the output communication speed.\nSet the input and output communication speeds.\nHow are various special control codes handled?\nSpeeds for use with <code>Termios::set_speed</code>, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\n<code>tcdrain(fd, duration)</code>—Wait until all pending output has …\n<code>tcflow(fd, action)</code>—Suspend or resume transmission or …\n<code>tcflush(fd, queue_selector)</code>—Wait until all pending …\n<code>tcgetattr(fd)</code>—Get terminal attributes.\n<code>tcgetpgrp(fd)</code>—Get the terminal foreground process group.\n<code>tcgetsid(fd)</code>—Return the session ID of the current …\n<code>tcgetwinsize(fd)</code>—Get the current terminal window size.\n<code>tcsendbreak(fd, 0)</code>—Transmit zero-valued bits.\n<code>tcsetattr(fd)</code>—Set terminal attributes.\n<code>tcsetpgrp(fd, pid)</code>—Set the terminal foreground process …\n<code>tcsetwinsize(fd)</code>—Set the current terminal window size.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\n<code>ttyname_r(fd)</code>—Returns the name of the tty open on <code>fd</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe number of columns the terminal has.\nThe number of rows the terminal has.\n<code>B0</code>\n<code>B110</code>\n<code>B115200</code>\n<code>B1200</code>\n<code>B134</code>\n<code>B150</code>\n<code>B1800</code>\n<code>B19200</code>\n<code>B200</code>\n<code>B230400</code>\n<code>B2400</code>\n<code>B300</code>\n<code>B38400</code>\n<code>B4800</code>\n<code>B50</code>\n<code>B57600</code>\n<code>B600</code>\n<code>B75</code>\n<code>B9600</code>\nAn invalid time value was provided.\nThe sleep was interrupted, the remaining time is returned.\nA return type for <code>nanosleep</code> and <code>clock_nanosleep_relative</code>.\nA type for the <code>tv_nsec</code> field of <code>Timespec</code>.\nThe sleep completed normally.\nA type for the <code>tv_sec</code> field of <code>Timespec</code>.\n<code>struct timespec</code>—A quantity of time in seconds plus …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>nanosleep(request, remain)</code>—Sleeps for a duration.\n<code>sched_yield()</code>—Hints to the OS that other processes …\nNanoseconds. Must be less than 1_000_000_000.\nSeconds.\n<code>clockid_t</code> <code>CLOCK_*</code> constants for use with <code>clock_gettime</code>.\nLinux dynamic clocks.\n<code>clockid_t</code> <code>CLOCK_*</code> constants for use with …\n<code>ClockId</code> values that are always supported at runtime.\n<code>CLOCK_MONOTONIC</code>\nA type for the <code>tv_nsec</code> field of <code>Timespec</code>.\n<code>CLOCK_PROCESS_CPUTIME_ID</code>\n<code>CLOCK_REALTIME</code>\nA type for the <code>tv_sec</code> field of <code>Timespec</code>.\n<code>CLOCK_THREAD_CPUTIME_ID</code>\n<code>struct timespec</code>—A quantity of time in seconds plus …\n<code>clock_getres(id)</code>—Returns the resolution of a clock.\n<code>clock_gettime(id)</code>—Returns the current value of a clock.\nLike <code>clock_gettime</code> but with support for dynamic clocks.\n<code>clock_settime(id, timespec)</code>—Sets the current value of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNanoseconds. Must be less than 1_000_000_000.\nSeconds.")